---
# Tasks for manager nodes
- name: Initialize Docker Swarm
  docker_swarm:
    state: present
  register: swarm_info
  when: inventory_hostname in groups['managers'][0]

- name: Get swarm join tokens
  set_fact:
    worker_token: "{{ swarm_info.swarm_facts.JoinTokens.Worker }}"
  when: inventory_hostname in groups['managers'][0]

- name: Share worker token with worker nodes
  set_fact:
    worker_token: "{{ hostvars[groups['managers'][0]].worker_token }}"
  when: inventory_hostname in groups['workers']

# Tasks for worker nodes
- name: Join worker nodes to the swarm
  docker_swarm:
    state: join
    advertise_addr: "{{ ansible_default_ipv4.address }}"
    join_token: "{{ worker_token }}"
    remote_addrs: ["{{ hostvars[groups['managers'][0]].ansible_host }}:2377"]
  when: inventory_hostname in groups['workers']

# Setup Redis stack
- name: Create app directory
  file:
    path: /home/{{ ansible_user }}/app
    state: directory
    mode: 0755

- name: Copy application files
  synchronize:
    src: ../../
    dest: /home/{{ ansible_user }}/app/
    rsync_opts:
      - "--exclude=.git"
      - "--exclude=infra"
      - "--exclude=.vscode"
      - "--exclude=ansible"
      - "--exclude=venv"
  when: inventory_hostname in groups['managers'][0]

- name: Copy environment file
  template:
    src: ../templates/env.j2
    dest: /home/{{ ansible_user }}/app/.env
  when: inventory_hostname in groups['managers'][0]

- name: Deploy the stack
  docker_stack:
    name: redis-app
    compose:
      - /home/{{ ansible_user }}/app/docker-stack.yml
    state: present
    env:
      REDIS_PASS: "{{ redis_password }}"
  when: inventory_hostname in groups['managers'][0]
